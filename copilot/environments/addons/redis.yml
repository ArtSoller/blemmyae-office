Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.

Mappings:
  Environments:
    production:
      CacheNodeType: cache.m7g.xlarge
      NumCacheNodes: 2
    preprod:
      CacheNodeType: cache.t4g.small
      NumCacheNodes: 2
    qa2:
      CacheNodeType: cache.t4g.small
      NumCacheNodes: 2
    qa1:
      CacheNodeType: cache.t4g.small
      NumCacheNodes: 2

Resources:
  # Subnet group to control where the Redis gets placed.
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Group of subnets to place Redis into.
      SubnetIds: !Split [",", {'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets'}]

  # Security group to add the Redis cluster to the VPC,
  # and to allow the Fargate containers to talk to Redis on port 6379.
  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Redis Security Group"
      VpcId: {'Fn::ImportValue': !Sub '${App}-${Env}-VpcId'}
      Tags:
        - Key: Name
          Value: !Sub copilot-${App}-${Env}-Redis

  # Enable ingress from other ECS services created within the environment.
  RedisIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from Fargate containers
      GroupId: !Ref RedisSecurityGroup
      IpProtocol: tcp
      FromPort: 6379
      ToPort: 6379
      SourceSecurityGroupId: {'Fn::ImportValue': !Sub '${App}-${Env}-wpSecurityGroup'}

# TODO: Figure out why this doesn't work.
#  # The cluster itself.
#  Redis:
#    Type: AWS::ElastiCache::CacheCluster
#    Properties:
#      Engine: redis
#      EngineVersion: 7
#      CacheParameterGroupName: default.redis7
#      ClusterName: !Sub "blemmyae-${Env}-redis"
#      CacheNodeType: !FindInMap [Environments, !Ref Env, CacheNodeType]
#      NumCacheNodes: !FindInMap [Environments, !Ref Env, NumCacheNodes]
#      CacheSubnetGroupName: !Ref RedisSubnetGroup
#      VpcSecurityGroupIds:
#        - !GetAtt "RedisSecurityGroup.GroupId"
